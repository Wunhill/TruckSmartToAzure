{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "defaultValue": "deletemediag625",
            "type": "string"
        },
        "baseVMName": {
            "type": "string",
            "defaultValue": "tsman",
            "metadata": {
                "displayName": "Base VM Name"
            }
        },
        "adminAccount": {
            "type": "string",
            "defaultValue": "student",
            "metadata": {
                "displayName": "Admin Account"
            }
        },
        "adminPWD": {
            "type": "securestring"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            }
        }

    },
    "variables": {
        "baseVMName": "[parameters('baseVMName')]",
        "vmName1": "[concat(variables('baseVMName'),'1-VM')]",
        "vmName2": "[concat(variables('baseVMName'),'2-VM')]",
        "osDiskName1": "[concat(variables('baseVMName'),'1-OS')]",
        "osDiskName2": "[concat(variables('baseVMName'),'2-OS')]",
        "nicName1": "[concat(variables('baseVMName'),'1-NIC')]",
        "nicName2": "[concat(variables('baseVMName'),'2-NIC')]",
        "networkName": "trucksmart-VNET",
        "addressRange": "10.0.0.0/16",
        "subnetName": "servers",
        "subnetAddressRange": "10.0.0.0/24",
        "loadBalancerName": "[concat(variables('baseVMName'),'-LB')]",
        "loadBalancerPIPName": "[concat(variables('baseVMName'),'-LB-PIP')]",
        "availSetName": "[concat(variables('baseVMName'),'-AS')]",

        "loadBalancerFrontEndName": "[concat(variables('loadBalancerName'),'-FE')]",
        "loadBalancerBackEndName": "[concat(variables('loadBalancerName'),'-BE')]",
        "loadBalancerProbeName": "[concat(variables('loadBalancerName'),'-PROBE')]",
        "loadBalancerRuleName": "[concat(variables('loadBalancerName'),'-RULE')]",
        "loadBalancerNATName1": "[concat(variables('loadBalancerName'),'1-NAT')]",
        "loadBalancerNATName2": "[concat(variables('loadBalancerName'),'2-NAT')]",

        "loadBalancerFrontEndID": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')),'/frontendIPConfigurations/',variables('loadBalancerFrontEndName'))]",

        "loadBalancerBackEndID": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')),'/backendAddressPools/',variables('loadBalancerBackEndName'))]",

        "loadBalancerProbeID": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')),'/probes/',variables('loadBalancerProbeName'))]",

        "loadBalancerNATID1": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')),'/inboundNatRules/',variables('loadBalancerNATName1'))]",

        "loadBalancerNATID2": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')),'/inboundNatRules/',variables('loadBalancerNATName2'))]",
        "vm1DSCArchiveFolder": "DSC",
        "vm1DSCArchiveFileName": "vm1DSC.zip",
        "vmDSC2ArchiveFolder": "DSC",
        "vmDSC2ArchiveFileName": "vmDSC2.zip",
        "anothertryArchiveFolder": "DSC",
        "anothertryArchiveFileName": "anothertry.zip",
        "vmDSC1ArchiveFolder": "DSC",
        "vmDSC1ArchiveFileName": "vmDSC1.zip"



    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "sku": {
                "name": "Aligned"
            },
            "name": "[variables('availSetName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Availability Set"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2,
                "virtualMachines": [
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName1'))]"
                    },
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName1'))]"
                    }
                ]
            },
            "dependsOn": [

            ]
        },
        {

            "type": "Microsoft.Compute/disks",
            "name": "[variables('osDiskName1')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "OS Disk 1"
            },
            "properties": {
                "accountType": "Standard_LRS",
                "osType": "Windows",
                "creationData": {
                    "createOption": "FromImage",
                    "imageReference": {
                        "id": "/Subscriptions/91d431c2-a451-4b37-8782-32c2d92fca00/Providers/Microsoft.Compute/Locations/eastus/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2016-Datacenter/Versions/latest"
                    }
                },
                "diskSizeGB": 128
            },
            "dependsOn": []
        },
        {

            "type": "Microsoft.Compute/disks",
            "name": "[variables('osDiskName2')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "OS Disk 2"
            },
            "properties": {
                "accountType": "Standard_LRS",
                "osType": "Windows",
                "creationData": {
                    "createOption": "FromImage",
                    "imageReference": {
                        "id": "/Subscriptions/91d431c2-a451-4b37-8782-32c2d92fca00/Providers/Microsoft.Compute/Locations/eastus/Publishers/MicrosoftWindowsServer/ArtifactTypes/VMImage/Offers/WindowsServer/Skus/2016-Datacenter/Versions/latest"
                    }
                },
                "diskSizeGB": 128
            },
            "dependsOn": []
        },
        {

            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName1')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "VM 1"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availSetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_A1"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[variables('vmName1')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"

                        },
                        "diskSizeGB": 128
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('vmName1')]",
                    "adminUsername": "[parameters('adminAccount')]",
                    "adminPassword": "[parameters('adminPWD')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https', '://', parameters('storageAccountName'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availSetName'))]",
                "[resourceId('Microsoft.Compute/disks', variables('osDiskName1'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName1'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "resources": [
                {
                    "name": "Microsoft.Powershell.DSC",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2016-03-30",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName1'))]"
                    ],
                    "tags": {
                        "displayName": "vmDSC1"
                    },
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "configuration": {
                                "url": "https://github.com/Wunhill/TruckSmartToAzure/blob/master/DSC/ManifestServiceSite.zip?raw=true",
                                "script": "dsctest.ps1",
                                "function": "TruckSmartServerInstall"
                            },
                            "configurationArguments": {
                                
                            }
                        },
                        "protectedSettings": {
                            "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
                        }
                    }
                }
                
                
            ]
        },
        {

            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName2')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "VM 2"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availSetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_A1"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[variables('vmName2')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 128
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('vmName2')]",
                    "adminUsername": "[parameters('adminAccount')]",
                    "adminPassword": "[parameters('adminPWD')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName2'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https', '://', parameters('storageAccountName'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availSetName'))]",
                "[resourceId('Microsoft.Compute/disks', variables('osDiskName2'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName2'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "resources": [
                {
                    "name": "Microsoft.Powershell.DSC",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2016-03-30",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName2'))]"
                    ],
                    "tags": {
                        "displayName": "vmDSC2"
                    },
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "configuration": {
                                "url": "https://github.com/Wunhill/TruckSmartToAzure/blob/master/DSC/ManifestServiceSite.zip?raw=true",
                                "script": "dsctest.ps1",
                                "function": "TruckSmartServerInstall"
                            },
                            "configurationArguments": {
                               
                            }
                        },
                        "protectedSettings": {
                            "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
                        }
                    }
                }
            ]
        },
        {

            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('loadBalancerName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Load balancer"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('loadBalancerFrontEndName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('loadBalancerPIPName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('loadBalancerBackEndName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "webapprule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('loadBalancerFrontEndID')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[variables('loadBalancerBackEndID')]"
                            },
                            "probe": {
                                "id": "[variables('loadBalancerProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('loadBalancerProbeName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('loadBalancerNATName1')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('loadBalancerFrontEndID')]"
                            },
                            "backendPort": 3389,
                            "frontendPort": 50000,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "[variables('loadBalancerNATName2')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('loadBalancerFrontEndID')]"
                            },
                            "backendPort": 3389,
                            "frontendPort": 50001,
                            "protocol": "tcp"
                        }
                    }
                ]
 
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('loadBalancerPIPName'))]"
            ]
        },
        {

            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName1')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "NIC 1"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {

                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('networkName')), '/subnets/',variables('subnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('loadBalancerBackEndID')]"
                                }

                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('loadBalancerNATID1')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
            ]
        },
        {

            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName2')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "NIC 2"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {

                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('networkName')), '/subnets/',variables('subnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('loadBalancerBackEndID')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('loadBalancerNATID2')]"
                                }
                            ]


                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
            ]
        },

        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('loadBalancerPIPName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Load balancer Public IP"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('networkName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Virtual Network"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressRange')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressRange')]"
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "tags": {
                "displayName": "Storage Account"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",

            "properties": {},
            "dependsOn": []
        }
    ],
    "outputs": {
        "LoadBalancerIP": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('loadBalancerPIPName'))).IpAddress]"
        }
    }
}